- name: create database credentials as secret
  k8s_v1_secret:
    state: present
    name: database-secret
    namespace: '{{ namespace }}'
    data:
      DB_HOST: "{{ 'database-service' | b64encode }}"
      DB_NAME: "{{ db_name | b64encode }}"
      DB_PASSWORD: "{{ db_password | b64encode }}"
      DB_PORT: "{{ '3306' | b64encode }}"
      DB_TYPE: "{{ 'mysql' | b64encode }}"
      DB_USER: "{{ db_user | b64encode }}"

- name: create Drupal credentials as secret
  k8s_v1_secret:
    state: present
    name: drupal-secret
    namespace: '{{ namespace }}'
    data:
      DP_USERNAME: "{{ drupal_username | b64encode }}"
      DP_PASSWORD: "{{ drupal_password | b64encode }}"
      DP_EMAIL: "{{ drupal_email | b64encode }}"

- name: create Drupal NGINX config from template
  template:
    src: drupal.conf.j2
    dest: /tmp/drupal.conf

- name: create Drupal NGINX configMap
  shell: oc create configmap drupal-nginx-conf --from-file=drupal-nginx-conf=/tmp/drupal.conf

- name: create NGINX general config from template
  template:
    src: nginx.conf.j2
    dest: /tmp/nginx.conf

- name: create NGINX configMap
  shell: oc create configmap nginx-conf --from-file=nginx-conf=/tmp/nginx.conf

- name: create database volume claim
  k8s_v1_persistent_volume_claim:
    state: present
    name: database-volume-claim
    namespace: "{{ namespace }}"
    labels:
      app: mysql
      service: mysql
    access_modes:
      - ReadWriteOnce
    resources_requests:
      storage: "{{ volume_size }}"

- name: create Drupal volume claim
  k8s_v1_persistent_volume_claim:
    state: present
    name: drupal-volume-claim
    namespace: "{{ namespace }}"
    labels:
      app: drupal
      service: drupal
    access_modes:
      - ReadWriteOnce
    resources_requests:
      storage: "{{ volume_size }}"

- name: create database deployment config
  openshift_v1_deployment_config:
    state: present
    name: mysql
    namespace: '{{ namespace }}'
    labels:
      app: mysql
      service: mysql
    replicas: 1
    selector:
      app: mysql
      service: mysql
    spec_template_metadata_labels:
      app: mysql
      service: mysql
    containers:
      - name: mysql
        image: registry.access.redhat.com/rhscl/mysql-57-rhel7
        imagePullPolicy: Always
        ports:
          - container_port: 3306
            protocol: TCP
        volume_mounts:
          - name: mysql-data
            mount_path: /var/lib/mysql
        working_dir: /
        env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: database-secret
                key: DB_USER
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: database-secret
                key: DB_PASSWORD
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: database-secret
                key: DB_NAME
    volumes:
      - name: mysql-data
        persistent_volume_claim:
          claim_name: database-volume-claim

- name: create Drupal deployment config
  openshift_v1_deployment_config:
    state: present
    name: drupal
    namespace: '{{ namespace }}'
    labels:
      app: drupal
      service: drupal
    replicas: 1
    selector:
      app: drupal
      service: drupal
    spec_template_metadata_labels:
      app: drupal
      service: drupal
    containers:
      - name: drupal
        image: registry.connect.redhat.com/bitnami/drupal-nginx-php5
        imagePullPolicy: Always
        ports:
          - container_port: 8080
            protocol: TCP
        volumeMounts:
          - name: drupal-nginx-configuration
            mountPath: /bitnami/nginx/conf/vhosts/drupal.conf
            subPath: drupal-nginx-conf
          - name: nginx-configuration
            mountPath: /bitnami/nginx/conf/nginx.conf
            subPath: nginx-conf
          - name: drupal-data
            mountPath: /bitnami/drupal
        env:
          # Database credentials
          - name: MARIADB_HOST
            value: database-service
          - name: MARIADB_PORT_NUMBER
            value: "3306"
          - name: DRUPAL_DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: database-secret
                key: DB_USER
          - name: DRUPAL_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: database-secret
                key: DB_PASSWORD
          - name: DRUPAL_DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: database-secret
                key: DB_NAME
          # Some Drupal basic data
          - name: DRUPAL_EMAIL
            valueFrom:
              secretKeyRef:
                name: drupal-secret
                key: DP_EMAIL
          - name: DRUPAL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: drupal-secret
                key: DP_PASSWORD
          - name: DRUPAL_USERNAME
            valueFrom:
              secretKeyRef:
                name: drupal-secret
                key: DP_USERNAME
    volumes:
      - name: nginx-configuration
        configMap:
          name: nginx-conf
      - name: drupal-nginx-configuration
        configMap:
          name: drupal-nginx-conf
      - name: drupal-data
        persistentVolumeClaim:
          claimName: drupal-volume-claim

- name: create database service
  k8s_v1_service:
    state: present
    name: database-service
    namespace: '{{ namespace }}'
    labels:
      app: mysql
      service: mysql
    selector:
      app: mysql
      service: mysql
    ports:
      - name: mysql
        port: 3306
        target_port: 3306

- name: create NGINX service
  k8s_v1_service:
    state: present
    name: nginx-service
    namespace: '{{ namespace }}'
    labels:
      app: drupal
      service: drupal
    selector:
      app: drupal
      service: drupal
    ports:
      - name: web
        port: 80
        target_port: 8080

- name: create NGINX route
  openshift_v1_route:
    state: present
    name: nginx-route
    namespace: '{{ namespace }}'
    spec_port_target_port: web
    labels:
      app: drupal
      service: drupal
    to_name: nginx-service
