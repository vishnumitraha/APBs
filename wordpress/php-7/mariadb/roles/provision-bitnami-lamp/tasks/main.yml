- name: create database credentials as secret
  k8s_v1_secret:
    state: present
    name: database-secret
    namespace: '{{ namespace }}'
    data:
      DB_HOST: "{{ 'database-service' | b64encode }}"
      DB_NAME: "{{ db_name | b64encode }}"
      DB_PASSWORD: "{{ db_password | b64encode }}"
      DB_PORT: "{{ '3306' | b64encode }}"
      DB_TYPE: "{{ 'mysql' | b64encode }}"
      DB_USER: "{{ db_user | b64encode }}"

- name: create database volume claim
  k8s_v1_persistent_volume_claim:
    state: present
    name: database-volume-claim
    namespace: "{{ namespace }}"
    labels:
      app: mariadb
      service: mariadb
    access_modes:
      - ReadWriteOnce
    resources_requests:
      storage: "{{ volume_size }}"

- name: create database deployment config
  openshift_v1_deployment_config:
    name: mariadb
    namespace: '{{ namespace }}'
    labels:
      app: mariadb
      service: mariadb
    replicas: 1
    selector:
      app: mariadb
      service: mariadb
    spec_template_metadata_labels:
      app: mariadb
      service: mariadb
    containers:
      - name: mariadb
        image: registry.access.redhat.com/rhscl/mariadb-101-rhel7
        imagePullPolicy: Always
        ports:
          - container_port: 3306
            protocol: TCP
        volume_mounts:
          - mount_path: /var/lib/mysql
            name: mariadb-data
        working_dir: /
        env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: database-secret
                key: DB_USER
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: database-secret
                key: DB_PASSWORD
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: database-secret
                key: DB_NAME
    volumes:
      - name: mariadb-data
        persistent_volume_claim:
          claim_name: database-volume-claim

- name: create php-fpm-apache deployment config
  openshift_v1_deployment_config:
    name: php-fpm-apache
    namespace: '{{ namespace }}'
    labels:
      app: php-fpm-apache
      service: php-fpm-apache
    replicas: 1
    selector:
      app: php-fpm-apache
      service: php-fpm-apache
    spec_template_metadata_labels:
      app: php-fpm-apache
      service: php-fpm-apache
    init_containers:
      - name: git-sync
        image: docker.io/carrodher/git-sync-amd64:v2.0.6-6-g8c16b75-dirty
        imagePullPolicy: Always
        volumeMounts:
          - name: application
            mountPath: /git
        env:
          - name: GIT_SYNC_REPO
            value: "{{ git_repo }}"
          - name: GIT_SYNC_DEST
            value: app
          - name: GIT_SYNC_ONE_TIME
            value: "true"
    containers:
      - name: php-fpm
        image: docker.io/javsalgar/php-fpm-redhat:7.2
        imagePullPolicy: Always
        ports:
          - container_port: 9000
            protocol: TCP
        volumeMounts:
          - name: application
            mountPath: /git
        env:
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: DB_NAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: DB_PASSWORD
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: DB_PORT
        - name: DB_TYPE
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: DB_TYPE
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: DB_USER
      - name: apache
        image: registry.access.redhat.com/rhscl/httpd-24-rhel7
        imagePullPolicy: Always
        ports:
          - container_port: 8080
            protocol: TCP
        volumeMounts:
          - name: configuration
            mountPath: /etc/httpd/conf.d/php-vhost.conf
          - name: application
            mountPath: /git
    volumes:
      - name: configuration
        configMap:
          name: apache-conf
          items:
            - key: apache-conf
              path: php-vhost.conf
      - name: application
        emptyDir: []

- name: create database service
  k8s_v1_service:
    name: database-service
    namespace: '{{ namespace }}'
    state: present
    labels:
      app: mariadb
      service: mariadb
    selector:
      app: mariadb
      service: mariadb
    ports:
      - name: mysql
        port: 3306
        target_port: 3306

- name: create Apache service
  k8s_v1_service:
    name: apache-service
    namespace: '{{ namespace }}'
    state: present
    labels:
      app: php-fpm-apache
      service: php-fpm-apache
    selector:
      app: php-fpm-apache
      service: php-fpm-apache
    ports:
      - name: web
        port: 80
        target_port: 8080

- name: create Apache route
  openshift_v1_route:
    name: apache-route
    namespace: '{{ namespace }}'
    state: present
    labels:
      app: php-fpm-apache
      service: php-fpm-apache
    to_name: apache-service
    spec_port_target_port: web

- name: create Apache config from template
  template:
    src: php-vhost.conf.j2
    dest: /tmp/php-vhost.conf

- name: create Apache configMap
  shell: oc create configmap apache-conf --from-file=apache-conf=/tmp/php-vhost.conf
